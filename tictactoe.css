*, 
*::after,                 /*targeting the root element.*/
*::before{
    box-sizing: border-box;
}


:root {
	--cell-size: 100px;
    --mark-size:calc(var(--cel-size)*0.9); /* creating variable in css,while hovering we will see the x and 0 symbols,(100x0.9)*/
	--color: #81c3fd; /* for hover */
	--color-set: #0275d8; /* when set */
	--l: 10px; /* X line-width */
}
body {	margin: 0;
}

.board {
	width: 100vw; /* entire screen width*/
	height: 100vh;
	display: grid;   /* defining its space and position */
	justify-content: center;
	align-content: center;
	justify-items: center;
    position: relative;
    cursor: pointer; /*instead of usual arrow pointer,we see hand pointer*/
	align-items: center;
	grid-template-columns: repeat(3, auto);
}

.cell {
	width: var(--cell-size);  /* its  easy to change globally in changing the value for variable in line 9*/
	height: var(--cell-size);
	border: 1px solid black;
	display: flex;      /* changes its placement acording to the screen(responsive)*/
	justify-content: center;
	align-items: center;
	position: relative;
	cursor: pointer;
}
/* remove border for edges */
.cell:first-child, .cell:nth-child(2), .cell:nth-child(3) {   /*first row */
	border-top: none;
}

.cell:nth-child(3n+1)  {     /*1,4,7 */
	border-left: none;
}

.cell:nth-child(3n) {    /*3,6,9*/
	border-right: none;
}

.cell:last-child, .cell:nth-child(7), .cell:nth-child(8) {    /*last row*/
	border-bottom: none;
}

.cell.x, .cell.circle {
	cursor: not-allowed;
}

.cell.x::before,.cell.x::after{
background-color: black;
}

.cell.circle::before{
    background-color: black;
  
}
.cell.circle::after{
    background-color: white;
  
}
.board.x.cell:not(.x):not(.circle):hover::before, /*there should not anything in the cell while hovering*/
.board.x.cell:not(.x):not(.circle):hover::after,
.board.circle.cell:not(.x):not(.circle):hover::before{
    background-color: lightgrey;   /*while hovering,x or circle appear in grey*/
}
.cell.x::before,
.cell.x::after,
.board.x.cell:not(.x):not(.circle):hover::before,
.board.x.cell:not(.x):not(.circle):hover::after{
    content: "";  /*creating or designing x*/
    position:absolute;
    width: calc(var(--mark-size)*0.15);
    height: var(--mark-size);

}
.cell.x::before,
.board.x.cell:not(.x):not(.circle):hover::before{
    transform: rotate(45 deg);
}
.cell.x::after,
.board.x.cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45 deg);
}
.cell.x::before,
.cell.x::after,
.board.x.cell:not(.x):not(.circle):hover::before,
.board.x.cell:not(.x):not(.circle):hover::after{
    content: "";  /*designing circle*/
    position:absolute;
    border-radius: 50%;
    
}
.cell.circle::before
.board.circle.cell:not(.x):not(.circle):hover::before{

    width: var(--mark-size);
    height: var(--mark-size);
}
.cell.circle::after
.board.circle.cell:not(.x):not(.circle):hover::after{

    width: calc(var(--mark-size)*0.8);
    height: calc(var(--mark-size)*0.8);
    background-color: white;
}

.winning-message {
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, 0.849);
	justify-content: center;
	align-items: center;
	color: white;
	font-size: 5rem;
	font-family: 'Courier New', Courier, monospace;
	flex-direction: column;
}
.winning-message > button{
     font-size:3rem;
	 background-color: white;
	 border:1px,solid black;
	 padding:10px,20px;

}
.winning-message > button:hover{
   background-color: black;
   border-color: white;
   color: white;

}
.winningMessage.show{
display:flex;

}